pipeline {
    agent any

    tools {
        // Ensure that JDK21 and Maven are installed and configured in Jenkins
        jdk 'JDK21'
        maven 'Maven3'
    }

    environment {
        MAVEN_OPTS = '-Xmx1024m'
    }

   stage('Checkout') {
    steps {
        echo 'Checking out latest code from GitHub...'
        
        git branch: 'main',
            url: 'https://github.com/allammaheshbabu/automationexerciserepo.git'

        sh '''
            git config --global user.name "Jenkins CI"
            git config --global user.email "jenkins@example.com"

            # Ensure we are on main branch
            git checkout main

            # If there are new/modified files in workspace, commit & push
            if [ -n "$(git status --porcelain)" ]; then
                git add .
                git commit -m "Auto-commit from Jenkins build"
                git push origin main
            else
                echo "No changes to commit."
            fi
        '''
    }
}


        stage('Build') {
            steps {
                echo 'Building project using Maven...'
                // Use Maven to clean, install dependencies, and compile the project
                bat 'mvn clean install'
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running TestNG tests...'
                // Run the tests using Maven
                bat 'mvn test'
            }
        }

        stage('Archive Reports') {
            steps {
                echo 'Archiving TestNG reports...'
                // Archive TestNG XML reports
                archiveArtifacts artifacts: '**/target/surefire-reports/*.xml', allowEmptyArchive: true
                // Publish HTML report (ensure index.html is generated by Surefire)
                publishHTML(target: [
                    reportDir: 'target/surefire-reports',
                    reportFiles: 'index.html', // Ensure index.html is generated
                    reportName: 'TestNG HTML Report',
                    keepAll: true,
                    alwaysLinkToLastBuild: true,
                    allowMissing: true
                ])
            }
        }
    }

    post {
        always {
            echo 'Cleaning workspace...'
            cleanWs()
        }
        success {
            echo 'Build & Tests successful!'
        }
        failure {
            echo 'Build or tests failed!'
        }
    }
}
